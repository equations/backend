swagger: '2.0'
info:
  title: Equations API
  description: The Equation Database API
  version: '0.0.1'
host: api.equations.wiki
schemes:
- https
basePath: /v0
produces:
- application/json

paths:

  # Retrieve context by context label.
  /context/{label}:
    get:
      operationId: src.read_context
      description: >
        Retrieve context by context label. Only the variables for the top-level
        context are provided.
      parameters:
      - name: label
        in: path
        type: string
        required: true
        description: Target context label (defaults to the root context)
      - name: depth
        in: query
        type: integer
        default: 0
        description: Number of included context levels
      responses:
        200:
          description: Target context data
          schema:
            $ref: '#/definitions/Context'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status'

  /context/:
    # Retrieve root context.
    get:
      operationId: src.read_root_context
      description: Retrieve root context. No variable information is provided.
      parameters:
      - name: depth
        in: query
        type: integer
        default: 1
        description: Number of included context levels
      responses:
        200:
          description: Root context data
          schema:
            $ref: '#/definitions/Context'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status'

    # Create new context (immutable).
    post:
      operationId: src.create_context
      description: Create new context (immutable).
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/NewContext'
      responses:
        200:
          description: The newly created context
          schema:
            type: object
            items:
              $ref: '#/definitions/Context'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status'

  # Retrieve variable by label.
  /variable/{label}:
    get:
      operationId: src.read_variable
      description: Retrieve variable by label.
      parameters:
      - name: label
        in: path
        type: string
        required: true
        description: Target variable label
      responses:
        200:
          description: An array of variables
          schema:
            $ref: '#/definitions/Variable'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status'

  /variable/:
    # Find variables using SymPy expression query.
    get:
      operationId: src.find_variables
      description: Find variables using SymPy expression query.
      parameters:
      - name: q
        in: query
        type: string
        required: true
        description: SymPy expression to search for (contains query)
      responses:
        200:
          description: An array of variables
          schema:
            type: array
            items:
              $ref: '#/definitions/Variable'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status'

    # Create new variable (immutable).
    post:
      operationId: src.create_variable
      description: Create new variable (immutable).
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Variable'
      responses:
        200:
          description: The newly created variable
          schema:
            type: object
            items:
              $ref: '#/definitions/Variable'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status'

  /derivation/:
    # Find derivations using SymPy expression query.
    get:
      operationId: src.find_derivations
      description: Find derivations using SymPy expression query.
      parameters:
      - name: q
        in: query
        type: string
        required: true
        description: SymPy expression to search for (contains query)
      responses:
        200:
          description: An array of derivations
          schema:
            type: array
            items:
              $ref: '#/definitions/Derivation'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status'

    # Create new derivation (immutable).
    post:
      operationId: src.create_derivation
      description: Create new derivation (immutable).
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Derivation'
      responses:
        200:
          description: The newly created and evaluated derivation
          schema:
            type: object
            items:
              $ref: '#/definitions/Derivation'
        400:
          description: Derivation could not be evaluated.
          schema:
            $ref: '#/definitions/Status'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status'

definitions:
  # Data to create new context.
  NewContext:
    type: object
    required:
    - label
    properties:
      label:
        type: string
        description: Context name
      parent:
        type: string
        description: Context parent

  # Equation context (imposes it's own variables and implementations)
  Context:
    type: object
    properties:
      id:
        type: integer
        description: Context database ID
      label:
        type: string
        description: Context name
      children:
        type: array
        items:
          $ref: '#/definitions/Context'
      variables:
        type: array
        items:
          $ref: '#/definitions/Variable'

  # Variable defined or implemented within the given context.
  Variable:
    type: object
    required:
    - label
    - latex
    - context
    - parent
    - expr
    - variables
    properties:
      id:
        type: integer
        description: Variable database ID
      label:
        type: string
        description: Unique variable name
      latex:
        type: string
        description: LaTeX notation for this variable
      context:
        type: string
        description: Variable context
      parent:
        type: string
        description: Parent variable
      expr:
        type: string
        description: SymPy expression
      variables:
        type: object
        description: Dependant variables
        additionalProperties:
          type: string

  # Mathematical derivation based on variable expressions and other derivations.
  Derivation:
    type: object
    required:
    - base
    - subs
    - lhs
    - rhs
    properties:
      id:
        type: integer
        description: Derivation database ID
      base:
        $ref: '#/definitions/ExprRef'
      subs:
        type: array
        description: Substitutions
        items:
          $ref: '#/definitions/ExprRef'
      lhs:
        type: string
        description: Left hand side equation
      rhs:
        type: string
        description: Right hand side equation

  # Expression reference
  ExprRef:
    type: object
    required:
    - type
    - id
    properties:
      type:
        type: string
        enum:
        - variable
        - derivation
        description: Request status identifier
      id:
        type: integer
        description: Reference ID

  # Status info (used to report unexpected behavior)
  Status:
    type: object
    properties:
      status:
        type: string
        description: Request status identifier
      message:
        type: string
        description: Status message
